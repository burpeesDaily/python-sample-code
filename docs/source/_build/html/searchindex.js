Search.setIndex({docnames:["index","modules","pyforest","pyforest.bin","pyforest.binary_trees","readme"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,sphinx:56},filenames:["index.rst","modules.rst","pyforest.rst","pyforest.bin.rst","pyforest.binary_trees.rst","readme.rst"],objects:{"":{pyforest:[2,0,0,"-"]},"pyforest.bin":{forest_cli:[3,0,0,"-"]},"pyforest.bin.forest_cli":{cli:[3,1,1,""],main:[3,4,1,""]},"pyforest.bin.forest_cli.cli":{do_build:[3,2,1,""],do_delete:[3,2,1,""],do_destroy:[3,2,1,""],do_detail:[3,2,1,""],do_exit:[3,2,1,""],do_insert:[3,2,1,""],do_search:[3,2,1,""],do_traverse:[3,2,1,""],intro:[3,3,1,""],prompt:[3,3,1,""]},"pyforest.binary_trees":{avl_tree:[4,0,0,"-"],binary_search_tree:[4,0,0,"-"],binary_tree:[4,0,0,"-"],red_black_tree:[4,0,0,"-"],threaded_binary_tree:[4,0,0,"-"],traversal:[4,0,0,"-"]},"pyforest.binary_trees.avl_tree":{AVLNode:[4,1,1,""],AVLTree:[4,1,1,""]},"pyforest.binary_trees.avl_tree.AVLNode":{height:[4,3,1,""],left:[4,3,1,""],parent:[4,3,1,""],right:[4,3,1,""]},"pyforest.binary_trees.avl_tree.AVLTree":{"delete":[4,2,1,"id0"],empty:[4,3,1,""],get_height:[4,2,1,"id1"],get_leftmost:[4,2,1,"id2"],get_predecessor:[4,2,1,"id3"],get_rightmost:[4,2,1,"id4"],get_successor:[4,2,1,"id5"],insert:[4,2,1,"id6"],root:[4,3,1,""],search:[4,2,1,"id7"]},"pyforest.binary_trees.binary_search_tree":{BinarySearchTree:[4,1,1,""]},"pyforest.binary_trees.binary_search_tree.BinarySearchTree":{"delete":[4,2,1,"id8"],empty:[4,3,1,""],get_height:[4,2,1,"id9"],get_leftmost:[4,2,1,"id10"],get_predecessor:[4,2,1,"id11"],get_rightmost:[4,2,1,"id12"],get_successor:[4,2,1,"id13"],insert:[4,2,1,"id14"],root:[4,3,1,""],search:[4,2,1,"id15"]},"pyforest.binary_trees.binary_tree":{BinaryTree:[4,1,1,""],Node:[4,1,1,""],NodeType:[4,5,1,""],Pairs:[4,5,1,""]},"pyforest.binary_trees.binary_tree.BinaryTree":{"delete":[4,2,1,""],empty:[4,2,1,""],get_height:[4,2,1,""],get_leftmost:[4,2,1,""],get_predecessor:[4,2,1,""],get_rightmost:[4,2,1,""],get_successor:[4,2,1,""],insert:[4,2,1,""],root:[4,3,1,""],search:[4,2,1,""]},"pyforest.binary_trees.binary_tree.Node":{data:[4,3,1,""],key:[4,3,1,""],left:[4,3,1,""],parent:[4,3,1,""],right:[4,3,1,""]},"pyforest.binary_trees.red_black_tree":{Color:[4,1,1,""],LeafNode:[4,1,1,""],RBNode:[4,1,1,""],RBTree:[4,1,1,""]},"pyforest.binary_trees.red_black_tree.Color":{Black:[4,3,1,""],Red:[4,3,1,""]},"pyforest.binary_trees.red_black_tree.LeafNode":{color:[4,3,1,""],data:[4,3,1,""],key:[4,3,1,""],left:[4,3,1,""],parent:[4,3,1,""],right:[4,3,1,""]},"pyforest.binary_trees.red_black_tree.RBNode":{color:[4,3,1,""]},"pyforest.binary_trees.red_black_tree.RBTree":{"delete":[4,2,1,"id16"],empty:[4,3,1,""],get_height:[4,2,1,"id17"],get_leftmost:[4,2,1,"id18"],get_predecessor:[4,2,1,"id19"],get_rightmost:[4,2,1,"id20"],get_successor:[4,2,1,"id21"],inorder_traverse:[4,2,1,"id22"],insert:[4,2,1,"id23"],postorder_traverse:[4,2,1,"id24"],preorder_traverse:[4,2,1,"id25"],root:[4,3,1,""],search:[4,2,1,"id26"]},"pyforest.binary_trees.threaded_binary_tree":{DoubleThreadNode:[4,1,1,""],DoubleThreadedBinaryTree:[4,1,1,""],LeftThreadedBinaryTree:[4,1,1,""],RightThreadedBinaryTree:[4,1,1,""],SingleThreadNode:[4,1,1,""]},"pyforest.binary_trees.threaded_binary_tree.DoubleThreadNode":{left:[4,3,1,""],leftThread:[4,3,1,""],parent:[4,3,1,""],right:[4,3,1,""],rightThread:[4,3,1,""]},"pyforest.binary_trees.threaded_binary_tree.DoubleThreadedBinaryTree":{"delete":[4,2,1,"id27"],empty:[4,3,1,""],get_height:[4,2,1,"id28"],get_leftmost:[4,2,1,"id29"],get_predecessor:[4,2,1,"id30"],get_rightmost:[4,2,1,"id31"],get_successor:[4,2,1,"id32"],inorder_traverse:[4,2,1,"id33"],insert:[4,2,1,"id34"],preorder_traverse:[4,2,1,"id35"],reverse_inorder_traverse:[4,2,1,"id36"],root:[4,3,1,""],search:[4,2,1,"id37"]},"pyforest.binary_trees.threaded_binary_tree.LeftThreadedBinaryTree":{"delete":[4,2,1,"id38"],empty:[4,3,1,""],get_height:[4,2,1,"id39"],get_leftmost:[4,2,1,"id40"],get_predecessor:[4,2,1,"id41"],get_rightmost:[4,2,1,"id42"],get_successor:[4,2,1,"id43"],insert:[4,2,1,"id44"],reverse_inorder_traverse:[4,2,1,"id45"],root:[4,3,1,""],search:[4,2,1,"id46"]},"pyforest.binary_trees.threaded_binary_tree.RightThreadedBinaryTree":{"delete":[4,2,1,"id47"],empty:[4,3,1,""],get_height:[4,2,1,"id48"],get_leftmost:[4,2,1,"id49"],get_predecessor:[4,2,1,"id50"],get_rightmost:[4,2,1,"id51"],get_successor:[4,2,1,"id52"],inorder_traverse:[4,2,1,"id53"],insert:[4,2,1,"id54"],preorder_traverse:[4,2,1,"id55"],root:[4,3,1,""],search:[4,2,1,"id56"]},"pyforest.binary_trees.threaded_binary_tree.SingleThreadNode":{isThread:[4,3,1,""],left:[4,3,1,""],parent:[4,3,1,""],right:[4,3,1,""]},"pyforest.binary_trees.traversal":{inorder_traverse:[4,4,1,""],levelorder_traverse:[4,4,1,""],postorder_traverse:[4,4,1,""],preorder_traverse:[4,4,1,""],reverse_inorder_traverse:[4,4,1,""]},"pyforest.tree_exceptions":{DuplicateKeyError:[2,6,1,""],EmptyTreeError:[2,6,1,""],KeyNotFoundError:[2,6,1,""]},pyforest:{bin:[3,0,0,"-"],binary_trees:[4,0,0,"-"],tree_exceptions:[2,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","method","Python method"],"3":["py","attribute","Python attribute"],"4":["py","function","Python function"],"5":["py","data","Python data"],"6":["py","exception","Python exception"]},objtypes:{"0":"py:module","1":"py:class","2":"py:method","3":"py:attribute","4":"py:function","5":"py:data","6":"py:exception"},terms:{"abstract":4,"class":[3,4,5],"default":4,"enum":4,"function":4,"import":[4,5],"int":4,"return":[4,5],"true":4,"try":5,One:4,The:[2,3,4,5],Use:[4,5],__delitem__:5,__getitem__:5,__init__:5,__iter__:5,__main__:5,__name__:5,__setitem__:5,_rbt:5,abc:4,add:5,alia:4,all:[4,5],alreadi:2,also:5,although:[],alwai:4,ani:4,applic:3,associ:4,avail:5,avl:[3,4,5],avl_tre:[1,2],avlnod:4,avltre:4,balanc:4,base:[2,3,4],basic:4,biggest:4,bin:[1,2],binari:[2,3,4,5],binary_search_tre:[1,2],binary_tre:[1,2,5],binarysearchtre:4,binarytre:4,black:[4,5],bool:4,bound:4,bst:3,build:[3,5],can:4,check:[4,5],cli:[0,3],clone:5,cmd:3,code:0,color:4,com:5,command:[3,5],common:4,compat:4,contact:5,contain:[2,4],content:1,current:4,custom:4,data:[2,3,4,5],dataclass:5,def:5,defin:4,definit:[2,4],del:5,delet:[3,4,5],demonstr:5,depend:4,deriv:4,destroi:[3,5],detail:[3,5],dlr:4,do_build:3,do_delet:3,do_destroi:3,do_detail:3,do_exit:3,do_insert:3,do_search:3,do_travers:3,docstr:[],document:5,doe:[2,4,5],doubl:4,doublethreadedbinarytre:4,doublethreadnod:4,download:[],duplicatekeyerror:[2,4],email:5,empti:[2,4],emptytreeerror:2,entri:3,exampl:[0,3,4],except:[2,5],exist:[2,3,4,5],exit:[3,5],fals:4,faster:4,featur:5,follow:5,forest:[0,2,3],forest_cli:[1,2],found:4,from:[4,5],fun:2,gener:[4,5],get:4,get_height:4,get_leftmost:4,get_predecessor:4,get_rightmost:4,get_successor:4,git:5,github:5,given:[3,4],guid:[],has:[4,5],height:4,help:[3,5],how:5,http:5,index:0,initi:5,inorder_travers:[4,5],insert:[3,4,5],inst:4,instal:0,instanc:5,integ:3,interact:5,interfac:4,intro:3,isthread:4,item:[3,4,5],iter:[4,5],its:4,john:5,just:[],kei:[2,3,4,5],keyerror:5,keynotfounderror:[2,4],ldr:4,leaf:4,leafnod:4,left:4,leftmost:4,leftthread:4,leftthreadedbinarytre:4,level:[4,5],levelorder_travers:4,librari:[2,5],line:[3,5],list:[3,5],look:4,lrd:4,luke:5,main:3,make:4,mani:2,map:5,mark:5,method:4,modul:[0,1],must:3,need:4,newer:5,next:4,node:4,nodetyp:4,non:4,none:4,note:4,numpydoc:[],object:4,one:5,onli:4,oper:3,option:[3,4],order:[4,5],otherwis:4,packag:[0,1],page:0,pair:[3,4],paramet:4,parent:4,pari:4,perform:4,pip:5,point:3,post:[3,4,5],postorder_travers:4,pre:[3,4,5],predecessor:4,preorder_travers:4,principl:[],print:5,project:5,prompt:[3,5],properti:4,provid:[4,5],pyforest:[0,5],python:0,rais:[2,4],rbnode:4,rbtree:[4,5],read:4,reason:4,recurs:4,red:[4,5],red_black_tre:[1,2,5],requir:0,rev:3,revers:[4,5],reverse_inorder_travers:4,right:4,rightmost:4,rightthread:4,rightthreadedbinarytre:4,rnl:4,root:4,routin:2,search:[0,3,4,5],self:[4,5],should:4,show:[3,5],shun:0,shunsvineyard:5,simpl:3,simul:5,singl:4,singlethreadnod:4,smallest:4,some:[4,5],sort:4,sphinx:5,start:4,structur:[2,5],style:[],submodul:1,subpackag:1,subtre:4,successor:4,supportedtreetyp:4,sure:4,therefor:4,thi:4,thread:[3,4,5],threaded_binary_tre:[1,2],tool:5,topic:5,travers:[1,2,3,5],tree:[2,3,4,5],tree_except:1,tress:4,tupl:4,type:[2,3,4,5],typevar:4,union:4,use:[4,5],used:5,using:4,valu:[4,5],variant:4,vineyard:0,welcom:[3,5],when:2,whose:4,yield:4},titles:["Welcome to Sample Project\u2019s documentation!","pyforest","pyforest package","pyforest.bin package","pyforest.binary_trees package","A Python Coding Sample for Shun\u2019s Vineyard"],titleterms:{avl_tre:4,bin:3,binary_search_tre:4,binary_tre:4,cli:5,code:5,content:[2,3,4],document:0,exampl:5,forest:5,forest_cli:3,indic:0,instal:5,modul:[2,3,4],packag:[2,3,4],project:0,pyforest:[1,2,3,4],python:5,red_black_tre:4,requir:5,routin:4,sampl:[0,5],shun:5,submodul:[2,3,4],subpackag:2,tabl:0,threaded_binary_tre:4,travers:4,tree_except:2,vineyard:5,welcom:0}})